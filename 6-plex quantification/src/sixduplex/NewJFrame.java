/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sixduplex;

import java.io.*;
import java.util.HashMap;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import java.util.*;
import java.util.logging.Logger;

/**
 *
 * @author shan
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }
    private static Logger logger=Logger.getLogger("NewJFrame");
    static void logException(Exception e){
        StringWriter trace=new StringWriter();
        e.printStackTrace(new PrintWriter(trace));
        logger.severe(trace.toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        thresholdTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton3.setText("H/L ratio");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        thresholdTextField.setText("0.002");

        jLabel1.setText("Threshold");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jLabel1)
                        .addGap(41, 41, 41)
                        .addComponent(thresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jButton3)))
                .addContainerGap(159, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(thresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(152, 152, 152)
                .addComponent(jButton3)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        char[] fixedModificationAminoAcid={'C'};
        //input for fixedModification
        double[] fixedModificationMassChange={57.021464};
        HashMap<Character,Double> fixedMod=new LinkedHashMap<>();
        int index=0;
        for(char m: fixedModificationAminoAcid)
        {
            fixedMod.put(m,fixedModificationMassChange[index]);
            index=index+1;
        }
            

        //input for variableModification
       
        double thres=Double.parseDouble(thresholdTextField.getText());
        //not in use
        double massDiff=0.0;
        
      
            
        //set up all of the varified modification
        List<HashMap<Character,Double>> allVarMod=new ArrayList<>();
        double[] nTerm={30.03801,30.04385,32.05056,32.05641,34.06312,34.06896};
        double[] kAmino={30.03801,30.04385,32.05056,32.05641,34.06312,34.06896};
        int n=nTerm.length;
        for(int i=0;i<n;i++){
            HashMap<Character,Double> oneVarMod=new LinkedHashMap<>();
            oneVarMod.put('1',nTerm[i]);
            oneVarMod.put('2',kAmino[i]);
            oneVarMod.put('3',15.994915);
            //oneVarMod.put('4',42.010565);
            allVarMod.add(oneVarMod);
        }
        //set up all of the fixed modification
        List<HashMap<Character,Double>> allFixMod=new ArrayList<>();
        for(int i=0;i<n;i++){
            HashMap<Character,Double> oneFixMod=new LinkedHashMap<>(fixedMod);
            allFixMod.add(oneFixMod);
        }
        
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileFilter() {
            @Override
            public String getDescription() {
                return "file contains filenames (*.txt)";
            }
            public boolean accept(File arg0) {
                if (arg0.isDirectory())
                    return true;
                String ext = null;
                String s = arg0.getName();
                int i = s.lastIndexOf('.');
                if (i > 0 &&  i < s.length() - 1) {
                    ext = s.substring(i+1).toLowerCase();
                }
                if (ext != null) {
                    if (ext.equals("txt")){
                        return true;
                    } else {
                        return false;
                    }
                }
                return false;
            }
        });


        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setMultiSelectionEnabled(false);
        fc.setDialogTitle("Open file containing names of scan summary and data file");
        // show the dialog
        int returnVal = fc.showOpenDialog(this);
        // make sure the user clicked OK
        if (returnVal != JFileChooser.APPROVE_OPTION)
         return;

        File fileNames = fc.getSelectedFile();
        System.out.println(fileNames);
        try{
            BufferedReader csvFile=new BufferedReader(new FileReader(fileNames));
            String dataRow;
            List<String> allData=new ArrayList<>();
            while ((dataRow=csvFile.readLine())!=null){
                allData.add(dataRow);
            }
            csvFile.close();
            String[] dataArray;
            
            for(int i=0;i<allData.size();i++){
                dataArray=allData.get(i).split(",");
                System.out.println(dataArray[0]);
                System.out.println(dataArray[1]);
                RelativeQuant rel=new RelativeQuant(new File(dataArray[0]),new File(dataArray[1]));
                //System.out.println(rel.expPeptide.scanOrder);
                rel.setThreshold(thres, massDiff);
                rel.setAllMod(allVarMod,allFixMod);
                rel.calculateAllLightHeavy();
                rel.writeData(new File(dataArray[0]));
            }
        }
        catch(NoDataColumnException e){
            System.out.println("data column doesn't exist");
            logException(e);
        }
        catch(FileNotFoundException e){
            System.out.println("File not found");
            logException(e);
        }
        catch(IOException e){
            e.printStackTrace(System.out);       
            logException(e);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField thresholdTextField;
    // End of variables declaration//GEN-END:variables
}
